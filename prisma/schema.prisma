// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(50)
  email        String        @unique @db.VarChar(50)
  password     String
  profile      Profile?
  bankAccounts BankAccount[]
}

model Profile {
  id             Int          @id @default(autoincrement())
  identityType   IdentityType
  identityNumber Int          @unique
  address        String
  userId         Int          @unique
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model BankAccount {
  id                        Int           @id @default(autoincrement())
  bankName                  String        @db.VarChar(20)
  bankAccountNumber         Int           @unique
  balance                   Int           @default(0)
  userId                    Int
  user                      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactionsAsSource      Transaction[] @relation("source")
  transactionsAsDestination Transaction[] @relation("destination")
}

model Transaction {
  id                   Int         @id @default(autoincrement())
  sourceAccountId      Int
  destinationAccountId Int
  amount               Int
  sourceAccount        BankAccount @relation("source", fields: [sourceAccountId], references: [id], onDelete: Cascade)
  destinationAccount   BankAccount @relation("destination", fields: [destinationAccountId], references: [id], onDelete: Cascade)
}

enum IdentityType {
  KTP
  SIM
  Passport
}
